using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework.Input;
using System;
using System.Diagnostics;

namespace Snake2
{
    public class Game1 : Game
    {
        private GraphicsDeviceManager _graphics;
        private SpriteBatch _spriteBatch;

        private Food apple;
        private Snake snake;

        Texture2D block;


        public Game1()
        {
            _graphics = new GraphicsDeviceManager(this);
            Content.RootDirectory = "Content";
            IsMouseVisible = true;
        }

        protected override void Initialize()
        {
            // TODO: Add your initialization logic here

            base.Initialize();
            snake._speed = 50f;
        }

        protected override void LoadContent()
        {
            _spriteBatch = new SpriteBatch(GraphicsDevice);

            _graphics.PreferredBackBufferWidth = 800;
            _graphics.PreferredBackBufferHeight = 800;
            _graphics.ApplyChanges();

            //Food
            var appleTexture = Content.Load<Texture2D>("apple");
            apple = new Food(appleTexture);
            apple._foodPos = new Vector2(500, 500);

            //SnakeHead
            var snakeHeadTexture = Content.Load<Texture2D>("SnakeHead");
            snake = new Snake(snakeHeadTexture);
            snake._snakePos = new Vector2(500, 400);

            //Grid
            block = Content.Load<Texture2D>("block");

        }

        protected override void Update(GameTime gameTime)
        {
            if (GamePad.GetState(PlayerIndex.One).Buttons.Back == ButtonState.Pressed || Keyboard.GetState().IsKeyDown(Keys.Escape))
                Exit();

            apple.Update();
            snake.Update();

            base.Update(gameTime);
        }

        protected override void Draw(GameTime gameTime)
        {
            GraphicsDevice.Clear(Color.Black);

            _spriteBatch.Begin();
            apple.Draw(_spriteBatch);
            snake.Draw(_spriteBatch);
            

            for (int i = 0; i < _graphics.PreferredBackBufferWidth; i += 50)
            {
                for (int z = 0; z < _graphics.PreferredBackBufferHeight; z += 50)
                {
                    _spriteBatch.Draw(block, new Vector2(i, z), Color.White);
                }
            }
            _spriteBatch.End();

            base.Draw(gameTime);
        }
    }
}
